{"version":3,"sources":["service/FetchMovieDB.js","components/MovieDetails/MovieDetails.js","components/AddInfoDetails/AddInfoDetails.js","views/Cast/Cast.js","views/Reviews/Reviews.js","views/MovieDetailsPage/MovieDetailsPage.js"],"names":["BASE_URL","API_KEY","fetchTrendMovie","axios","get","then","result","data","results","catch","err","console","log","fetchSearchMovie","searchQuery","fetchDetailsMovie","id","res","fetchCastMovie","fetchReviewsMovie","movie_id","MovieDetails","movieDetails","src","poster_path","alt","original_title","width","release_date","vote_average","overview","genres","map","movie","name","AddInfoDetails","movieId","to","Cast","useState","castList","setCastList","useEffect","fetchResult","a","cast","el","profile_path","character","Reviews","reviews","setReviews","resultFetch","length","author","content","MovieDetailsPage","setMovieDetails","useParams","url","useRouteMatch","exact","path"],"mappings":"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","file":"static/js/movie-details-page.1da5b590.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '6aab34192b7a363d622c25c364ff9e4e';\n\n// ========HomePage==========\nexport const fetchTrendMovie = () => {\n  return (\n    axios\n      .get(`${BASE_URL}trending/movie/day?api_key=${API_KEY}`)\n      .then(result => result.data.results)\n      // .then(res=>console.log(res.data.results))\n      .catch(err => console.log(err))\n  );\n};\n// =========SearchQuery=========\nexport const fetchSearchMovie = searchQuery => {\n  return (\n    axios\n      .get(\n        `${BASE_URL}search/movie?api_key=${API_KEY}&query=${searchQuery}&language=en-US`,\n      )\n      // .then(res => console.log(res.data.results))\n      .then(result => result.data.results)\n      .catch(err => console.log(err))\n  );\n};\n\n// =======Details===========\nexport const fetchDetailsMovie = id => {\n  return axios\n    .get(`${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`)\n    .then(res => res.data)\n    .catch(err => console.log(err));\n};\n\n// ======Cast========\nexport const fetchCastMovie = id => {\n  return (\n    axios\n      .get(`${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`)\n      // .then(res=>console.log(res.data))\n      .then(res => res.data)\n      .catch(err => console.log(err))\n  );\n};\n\n// ========reviews========\nexport const fetchReviewsMovie = movie_id => {\n  return (\n    axios\n      .get(\n        `${BASE_URL}movie/${movie_id}/reviews?api_key=${API_KEY}&language=en-US&page=1`,\n      )\n      // .then(res => console.log(res.data))\n      .then(res => res.data)\n      .catch(err => console.log(err))\n  );\n};\n","import PropTypes from 'prop-types';\n\nexport const MovieDetails = ({ movieDetails }) => {\n  return (\n    movieDetails && (\n      <div>\n        <img\n          src={`https://image.tmdb.org/t/p/w500/${movieDetails.poster_path}`}\n          alt={movieDetails.original_title}\n          width={300}\n        />\n        <div>\n          <h1>{movieDetails.original_title}</h1> ({movieDetails.release_date})\n          <p>User Score: {movieDetails.vote_average * 10}%</p>\n          <h2>Overview</h2>\n          <p>{movieDetails.overview}</p>\n          <h2>Genres</h2>\n          <ul>\n            {movieDetails.genres.map(movie => (\n              <li key={movie.id}>{movie.name}</li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    )\n  );\n};\nMovieDetails.propTypes = {\n  movieDetails: PropTypes.object,\n};\n","import PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nexport const AddInfoDetails = ({ movieId }) => {\n  return (\n    <ul>\n      <li>\n        <NavLink to={`/movies/${movieId}/cast`}>Cast</NavLink>\n      </li>\n      <li>\n        <NavLink to={`/movies/${movieId}/reviews`}>Reviews</NavLink>\n      </li>\n    </ul>\n  );\n};\nAddInfoDetails.propTypes = {\n  movieId: PropTypes.string,\n};\n","import PropTypes from 'prop-types';\n\nimport { useState, useEffect } from 'react';\n\nimport { fetchCastMovie } from '../../service/FetchMovieDB';\n\nexport const Cast = ({ movieId }) => {\n  const [castList, setCastList] = useState(null);\n\n  useEffect(() => {\n    fetchResult();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const fetchResult = async () => {\n    const result = await fetchCastMovie(movieId);\n    setCastList(result);\n  };\n  //   console.log(castList);\n\n  return (\n    <ul>\n      {castList &&\n        castList.cast.map(el => (\n          <li key={el.id}>\n            <img\n              src={\n                el.profile_path\n                  ? `https://image.tmdb.org/t/p/w500/${el.profile_path}`\n                  : 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTSz5UULZ_ymiZ1Ig1F6QmZd2KB3nAwqHhD7A&usqp=CAU'\n              }\n              alt={el.name}\n              width={150}\n            />\n            <p>{el.name}</p>\n            <p>Character: {el.character}</p>\n          </li>\n        ))}\n    </ul>\n  );\n};\n\nCast.propTypes = {\n  movieId: PropTypes.string,\n};\n","import PropTypes from 'prop-types';\n\nimport { useEffect } from 'react';\nimport { useState } from 'react/cjs/react.development';\nimport { fetchReviewsMovie } from '../../service/FetchMovieDB';\n\nexport const Reviews = ({ movieId }) => {\n  const [reviews, setReviews] = useState(null);\n  useEffect(() => {\n    resultFetch();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const resultFetch = async () => {\n    const res = await fetchReviewsMovie(movieId);\n    setReviews(res.results);\n  };\n  // console.log(reviews);\n  return (\n    <ul>\n      {reviews && reviews.length > 0 ? (\n        reviews.map(el => (\n          <li key={el.id}>\n            <h2>Author:{el.author}</h2>\n            <p>{el.content}</p>\n          </li>\n        ))\n      ) : (\n        <h2>We don't have any reviews for this movie </h2>\n      )}\n    </ul>\n  );\n};\nReviews.propTypes = {\n  movieId: PropTypes.string,\n};\n","import { useEffect, useState } from 'react';\nimport { useParams, Route, useRouteMatch } from 'react-router';\nimport { fetchDetailsMovie } from '../../service/FetchMovieDB';\n\nimport { MovieDetails } from '../../components/MovieDetails/MovieDetails';\nimport { AddInfoDetails } from '../../components/AddInfoDetails/AddInfoDetails';\nimport { Cast } from '../Cast/Cast';\nimport { Reviews } from '../Reviews/Reviews';\n\nconst MovieDetailsPage = () => {\n  const [movieDetails, setMovieDetails] = useState(null);\n  const { movieId } = useParams();\n  const { url } = useRouteMatch();\n\n  useEffect(() => {\n    fetchResult();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const fetchResult = async () => {\n    const result = await fetchDetailsMovie(movieId);\n    setMovieDetails(result);\n  };\n  //   console.log(movieDetails);\n\n  return (\n    <>\n      <MovieDetails movieDetails={movieDetails} />\n      <hr />\n      <AddInfoDetails movieId={movieId} />\n      <hr />\n      <Route exact path={`${url}/cast`}>\n        <Cast movieId={movieId} />\n      </Route>\n      <Route exact path={`${url}/reviews`}>\n        <Reviews movieId={movieId} />\n      </Route>\n    </>\n  );\n};\n\nexport default MovieDetailsPage;\n"],"sourceRoot":""}