{"version":3,"sources":["service/FetchMovieDB.js","components/HomeList/HomeList.js","components/Form/Form.js","views/MoviesPage/MoviesPage.js"],"names":["BASE_URL","API_KEY","fetchTrendMovie","axios","get","then","result","data","results","catch","err","console","log","fetchSearchMovie","searchQuery","fetchDetailsMovie","id","res","fetchCastMovie","fetchReviewsMovie","movie_id","HomeList","moviesList","map","original_title","to","Form","handleChangeQuery","useState","inputSearch","setInputSearch","onSubmit","e","preventDefault","type","onChange","target","value","MoviesPage","query","setQuery","setResult","useEffect","resultFetch","a"],"mappings":"iJAAA,+LAEMA,EAAW,gCACXC,EAAU,mCAGHC,EAAkB,WAC7B,OACEC,IACGC,IADH,UACUJ,EADV,sCACgDC,IAC7CI,MAAK,SAAAC,GAAM,OAAIA,EAAOC,KAAKC,WAE3BC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OAInBG,EAAmB,SAAAC,GAC9B,OACEX,IACGC,IADH,UAEOJ,EAFP,gCAEuCC,EAFvC,kBAEwDa,EAFxD,oBAKGT,MAAK,SAAAC,GAAM,OAAIA,EAAOC,KAAKC,WAC3BC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OAKnBK,EAAoB,SAAAC,GAC/B,OAAOb,IACJC,IADI,UACGJ,EADH,iBACoBgB,EADpB,oBACkCf,EADlC,oBAEJI,MAAK,SAAAY,GAAG,OAAIA,EAAIV,QAChBE,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OAIjBQ,EAAiB,SAAAF,GAC5B,OACEb,IACGC,IADH,UACUJ,EADV,kBAC4BgB,EAD5B,4BACkDf,IAE/CI,MAAK,SAAAY,GAAG,OAAIA,EAAIV,QAChBE,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OAKnBS,EAAoB,SAAAC,GAC/B,OACEjB,IACGC,IADH,UAEOJ,EAFP,iBAEwBoB,EAFxB,4BAEoDnB,EAFpD,2BAKGI,MAAK,SAAAY,GAAG,OAAIA,EAAIV,QAChBE,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,Q,gCCtDhC,oDAEaW,EAAW,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACzB,OACE,6BACGA,GACCA,EAAWC,KAAI,gBAAGP,EAAH,EAAGA,GAAIQ,EAAP,EAAOA,eAAP,OACb,6BACE,cAAC,IAAD,CAAMC,GAAE,kBAAaT,GAArB,SACE,4BAAIQ,OAFCR,U,0FCLNU,EAAO,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,kBACrB,EAAsCC,mBAAS,MAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAYA,OACE,uBAAMC,SAPa,SAAAC,GACnBA,EAAEC,iBACFN,EAAkBE,IAKlB,UACE,uBAAOK,KAAK,OAAOC,SAZG,SAAAH,GACxBF,EAAeE,EAAEI,OAAOC,UAYtB,wBAAQH,KAAK,SAAb,wB,gBCkBSI,UAhCI,WACjB,MAA0BV,mBAAS,IAAnC,mBAAOW,EAAP,KAAcC,EAAd,KACA,EAA4BZ,mBAAS,MAArC,mBAAOtB,EAAP,KAAemC,EAAf,KAEAC,qBAAU,WACM,KAAVH,GAGJI,MAEC,CAACJ,IAEJ,IAIMI,EAAW,uCAAG,4BAAAC,EAAA,sEACG/B,YAAiB0B,GADpB,OACZjC,EADY,OAElBmC,EAAUnC,GAFQ,2CAAH,qDAOjB,OACE,gCACE,cAAC,EAAD,CAAMqB,kBAbgB,SAAAK,GACxBQ,EAASR,MAcP,cAACX,EAAA,EAAD,CAAUC,WAAYhB","file":"static/js/movies-page.56183724.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '6aab34192b7a363d622c25c364ff9e4e';\n\n// ========HomePage==========\nexport const fetchTrendMovie = () => {\n  return (\n    axios\n      .get(`${BASE_URL}trending/movie/day?api_key=${API_KEY}`)\n      .then(result => result.data.results)\n      // .then(res=>console.log(res.data.results))\n      .catch(err => console.log(err))\n  );\n};\n// =========SearchQuery=========\nexport const fetchSearchMovie = searchQuery => {\n  return (\n    axios\n      .get(\n        `${BASE_URL}search/movie?api_key=${API_KEY}&query=${searchQuery}&language=en-US`,\n      )\n      // .then(res => console.log(res.data.results))\n      .then(result => result.data.results)\n      .catch(err => console.log(err))\n  );\n};\n\n// =======Details===========\nexport const fetchDetailsMovie = id => {\n  return axios\n    .get(`${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`)\n    .then(res => res.data)\n    .catch(err => console.log(err));\n};\n\n// ======Cast========\nexport const fetchCastMovie = id => {\n  return (\n    axios\n      .get(`${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`)\n      // .then(res=>console.log(res.data))\n      .then(res => res.data)\n      .catch(err => console.log(err))\n  );\n};\n\n// ========reviews========\nexport const fetchReviewsMovie = movie_id => {\n  return (\n    axios\n      .get(\n        `${BASE_URL}movie/${movie_id}/reviews?api_key=${API_KEY}&language=en-US&page=1`,\n      )\n      // .then(res => console.log(res.data))\n      .then(res => res.data)\n      .catch(err => console.log(err))\n  );\n};\n","import PropTypes from 'prop-types';\n\nimport { Link } from 'react-router-dom';\n\nexport const HomeList = ({ moviesList }) => {\n  return (\n    <ul>\n      {moviesList &&\n        moviesList.map(({ id, original_title }) => (\n          <li key={id}>\n            <Link to={`/movies/${id}`}>\n              <p>{original_title}</p>\n            </Link>\n          </li>\n        ))}\n    </ul>\n  );\n};\nHomeList.propTypes = {\n  moviesList: PropTypes.array,\n};\n","import PropTypes from 'prop-types';\n\nimport { useState } from 'react';\n\nexport const Form = ({ handleChangeQuery }) => {\n  const [inputSearch, setInputSearch] = useState(null);\n\n  const handleSearchInput = e => {\n    setInputSearch(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    handleChangeQuery(inputSearch);\n  };\n  // console.log(inputSearch);\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" onChange={handleSearchInput} />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\nForm.propTypes = {\n  handleChangeQuery: PropTypes.func,\n};\n","import { useEffect, useState } from 'react';\nimport { Form } from '../../components/Form/Form';\n\nimport { fetchSearchMovie } from '../../service/FetchMovieDB';\nimport { HomeList } from '../../components/HomeList/HomeList';\n\nconst MoviesPage = () => {\n  const [query, setQuery] = useState('');\n  const [result, setResult] = useState(null);\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n    resultFetch();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [query]);\n\n  const handleChangeQuery = e => {\n    setQuery(e);\n  };\n\n  const resultFetch = async () => {\n    const result = await fetchSearchMovie(query);\n    setResult(result);\n  };\n  // console.log(query);\n  // console.log(result);\n\n  return (\n    <div>\n      <Form handleChangeQuery={handleChangeQuery} />\n      {/* <MovieDetails movieDetails={result}/> */}\n      <HomeList moviesList={result} />\n    </div>\n  );\n};\n\nexport default MoviesPage;\n"],"sourceRoot":""}